1)

MariaDB [vacation]> select guestname, guestaddress from guest WHERE guestaddress like "%London%" ORDER BY guestname ASC;
+--------------+--------------------+
| guestname    | guestaddress       |
+--------------+--------------------+
| John Kay     | 56 High St, London |
| Mike Ritchie | 18 Tain St, London |
+--------------+--------------------+
2 rows in set (0.003 sec)

2)

MariaDB [vacation]> select * from room WHERE price<40 AND (type="double" OR type="family") ORDER BY price ASC;
+--------+---------+--------+-------+
| roomno | hotelno | type   | price |
+--------+---------+--------+-------+
|    801 | ch02    | double | 15.00 |
|    601 | fb01    | double | 29.00 |
|   1001 | dc01    | double | 30.00 |
|   1101 | dc01    | family | 35.00 |
|    701 | fb01    | family | 39.00 |
+--------+---------+--------+-------+
5 rows in set (0.000 sec)

3)

MariaDB [vacation]> select * from booking where dateto is null;
+---------+---------+------------+--------+--------+
| hotelno | guestno | datefrom   | dateto | roomno |
+---------+---------+------------+--------+--------+
| ch01    |   10006 | 2023-04-21 | NULL   |   1101 |
| dc01    |   10003 | 2023-05-20 | NULL   |   1001 |
| fb01    |   10001 | 2023-05-01 | NULL   |    701 |
+---------+---------+------------+--------+--------+
3 rows in set (0.001 sec)

4)

MariaDB [vacation]> select type,round(avg(price),2) from room GROUP BY type;
+--------+---------------------+
| type   | round(avg(price),2) |
+--------+---------------------+
| double |               40.00 |
| family |               44.66 |
| single |               27.00 |
+--------+---------------------+
3 rows in set (0.000 sec)

5)

MariaDB [vacation]> select type,sum(price) from room GROUP BY type HAVING type="double";
+--------+------------+
| type   | sum(price) |
+--------+------------+
| double |     160.00 |
+--------+------------+
1 row in set (0.000 sec)

6)

MariaDB [vacation]> SELECT * from booking WHERE dateto>"2023-08-01";
+---------+---------+------------+------------+--------+
| hotelno | guestno | datefrom   | dateto     | roomno |
+---------+---------+------------+------------+--------+
| fb02    |   10005 | 2023-05-12 | 2031-05-04 |   1101 |
+---------+---------+------------+------------+--------+
1 row in set (0.000 sec)
OR
MariaDB [vacation]> SELECT count(*) from booking WHERE dateto>"2023-08-01";
+----------+
| count(*) |
+----------+
|        1 |
+----------+
1 row in set (0.001 sec)







7)

MariaDB [vacation]> select hotelname, roomno, type from hotel JOIN room ON hotel.hotelno=room.hotelno WHERE hotel.hotelname="the tower hotel";
+-----------------+--------+--------+
| hotelname       | roomno | type   |
+-----------------+--------+--------+
| The Tower Hotel |    501 | single |
| The Tower Hotel |    601 | double |
| The Tower Hotel |    701 | family |
+-----------------+--------+--------+
3 rows in set (0.000 sec)

8)

MariaDB [vacation]> SELECT * FROM booking WHERE now() BETWEEN datefrom AND dateto;
+---------+---------+------------+------------+--------+
| hotelno | guestno | datefrom   | dateto     | roomno |
+---------+---------+------------+------------+--------+
| fb02    |   10005 | 2023-05-12 | 2031-05-04 |   1101 |
+---------+---------+------------+------------+--------+
1 row in set (0.001 sec)

9)


update values

MariaDB [vacation]> UPDATE room SET price=price + (price * 5/100);
Query OK, 12 rows affected (0.048 sec)
Rows matched: 12  Changed: 12  Warnings: 0

MariaDB [vacation]> select * from room;
+--------+---------+--------+-------+
| roomno | hotelno | type   | price |
+--------+---------+--------+-------+
|    501 | fb01    | single | 19.95 |
|    601 | fb01    | double | 30.45 |
|    701 | ch02    | single | 10.50 |
|    701 | fb01    | family | 40.95 |
|    801 | ch02    | double | 15.75 |
|    901 | dc01    | single | 18.90 |
|   1001 | ch01    | single | 31.50 |
|   1001 | dc01    | double | 31.50 |
|   1001 | fb02    | single | 60.90 |
|   1101 | ch01    | family | 63.00 |
|   1101 | dc01    | family | 36.75 |
|   1101 | fb02    | double | 90.30 |
+--------+---------+--------+-------+
12 rows in set (0.000 sec)

